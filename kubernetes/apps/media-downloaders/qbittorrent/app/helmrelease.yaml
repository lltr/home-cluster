---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media-downloaders
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.5.2@sha256:4fb6a9dc178ce58716283ca849d3f5cc34ddf4cc21740793b142448df911cdf0
      pullPolicy: IfNotPresent
    settings:
      automaticPortSetup: false
    env:
      TZ: ${TIMEZONE}

    service:
      main:
        ports:
          http:
            port: 8080
      bittorrent:
        enabled: false
        type: ClusterIP
        ports:
          bittorrent:
            enabled: true
            port: 6881
            protocol: TCP
            targetPort: 6881

    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          external-dns.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/configuration-snippet: |
                proxy_hide_header "x-webkit-csp";
                proxy_hide_header "content-security-policy";
                proxy_hide_header "X-Frame-Options";
                proxy_set_header Accept-Encoding "";
        ingressClassName: "nginx"
        hosts:
          - host: &host qbittorrent.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: qbittorrent-tls
            hosts:
              - *host

    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100

    persistence:
      config:
        enabled: true
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
        labels:
          snapshot.home.arpa/enabled: "true"
      downloads:
        enabled: true
        type: nfs
        server: ${SECRET_NFS_IP}
        path: /volume1/downloads
        mountPath: /downloads
      media:
        enabled: true
        type: nfs
        server: ${SECRET_NFS_IP}
        path: /volume1/media
        mountPath: /media
      incomplete:
        enabled: true
        type: emptyDir
