---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app kubernetes-dashboard
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: kubernetes-dashboard
      version: 7.0.0
      sourceRef:
        kind: HelmRepository
        name: kubernetes-dashboard
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    image:
      repository: kubernetesui/dashboard
      tag: "v2.7.0"  # If not defined, uses appVersion of Chart.yaml
      pullPolicy: IfNotPresent
      pullSecrets: []

    ## Number of replicas
    replicaCount: 2

    ## Here annotations can be added to the kubernetes dashboard deployment
    annotations: {}
    ## Here labels can be added to the kubernetes dashboard deployment
    labels: {}

    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsUser: 1001
      runAsGroup: 2001

    affinity: {}
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
      limits:
        cpu: 2
        memory: 200Mi
    protocolHttp: false

    service:
      type: ClusterIP
      externalPort: 443
      annotations: {}
      labels: {}

    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
        external-dns.home.arpa/enabled: "true"
      className: "nginx"
      paths:
        - /
      hosts:
        - &host "dashboard.${SECRET_DOMAIN}"
      tls:
        - secretName: kubernetes-dashboard-tls
          hosts:
            - *host

    # Global dashboard settings
    settings:
      {}

    ## Pinned CRDs that will be displayed in dashboard's menu
    pinnedCRDs:
      []

    ## PodSecurityContext for pod level securityContext
    # securityContext:
    #   runAsUser: 1001
    #   runAsGroup: 2001

    serviceMonitor:
      # Whether or not to create a Prometheus Operator service monitor.
      enabled: false
      ## Here labels can be added to the serviceMonitor
      labels: {}
      ## Here annotations can be added to the serviceMonitor
      annotations: {}
