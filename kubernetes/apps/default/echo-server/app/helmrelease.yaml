---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app echo-server
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controller:
      replicas: 1
      strategy: RollingUpdate
    image:
      repository: docker.io/jmalloc/echo-server
      tag: 0.3.5
    service:
      main:
        ports:
          http:
            port: &port 8080
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /health
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          external-dns.home.arpa/enabled: "true"
          nginx.ingress.kubernetes.io/auth-response-headers: X-Vouch-User
          nginx.ingress.kubernetes.io/auth-signin: >-
            https://vouch.optrix.cloud/login?url=$scheme://$http_host$request_uri&vouch-failcount=$auth_resp_failcount&X-Vouch-Token=$auth_resp_jwt&error=$auth_resp_err
          nginx.ingress.kubernetes.io/auth-snippet: >
            # these return values are used by the @error401 call
            auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
            auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
            auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
            # when VP is hosted externally to k8s ensure the SSL cert is valid to
            avoid MITM risk
            # proxy_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
            # proxy_ssl_session_reuse on;
            # proxy_ssl_verify_depth 2;
            # proxy_ssl_verify on;
          nginx.ingress.kubernetes.io/auth-url: https://vouch.optrix.cloud/validate
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DEV_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: echo-server-tls
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
    resources:
      requests:
        cpu: 5m
        memory: 10Mi
      limits:
        memory: 50Mi
