---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gitea
  namespace: development
spec:
  interval: 15m
  chart:
    spec:
      chart: gitea
      version: 8.0.2
      sourceRef:
        kind: HelmRepository
        name: gitea-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: gitea/gitea
      tag: 1.19.0
      rootless: true # only possible when running 1.14 or later

    containerSecurityContext:
      capabilities:
        add: ["SYS_CHROOT"]

    ingress:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
        external-dns.home.arpa/enabled: "true"
      hosts:
        - host: &host gitea.${SECRET_DOMAIN}
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: gitea-tls
          hosts:
            - *host

    service:
      annotations:
        prometheus.io/probe: "true"
        prometheus.io/protocol: "tcp"
      http:
        port: 3000
      ssh:
        type: LoadBalancer
        port: 22
        externalTrafficPolicy: Local
        externalIPs:
          - "${SVC_GITEA_IP}"

    persistence:
      enabled: true
      existingClaim: gitea-data

    gitea:
      admin:
        email: gitea@${SECRET_DOMAIN}
        username: gitea_admin

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: monitoring
          additionalLabels:
            release: kube-prometheus-stack

      config:
        APP_NAME: Gitea Server
        server:
          DISABLE_SSH: false
          SSH_PORT: 22
          SSH_LISTEN_PORT: 22
          SSH_DOMAIN: ssh.gitea.${SECRET_DOMAIN}
          DOMAIN: "gitea.${SECRET_DOMAIN}"
          ROOT_URL: "https://gitea.${SECRET_DOMAIN}"
          ENABLE_GZIP: true
          LFS_START_SERVER: true
        database:
          DB_TYPE: postgres
          SCHEMA: public
          SSL_MODE: disable
        service:
          DISABLE_REGISTRATION: false
          REQUIRE_SIGNIN_VIEW: true
          SHOW_REGISTRATION_BUTTON: false
        webhook:
          ALLOWED_HOST_LIST: private
        respository:
          DEFAULT_PRIVATE: true
        admin:
          DISABLE_REGULAR_ORG_CREATION: true

    podAnnotations:
      reloader.stakater.com/search: "true"

    postgresql:
      enabled: false

  valuesFrom:
    - targetPath: gitea.admin.password
      kind: Secret
      name: gitea-secrets
      valuesKey: adminPassword
    # Postgres Init DB
    - targetPath: gitea.config.database.USER
      kind: Secret
      name: gitea-secrets
      valuesKey: POSTGRES_USER
    - targetPath: gitea.config.database.PASSWD
      kind: Secret
      name: gitea-secrets
      valuesKey: POSTGRES_PASS
    - targetPath: gitea.config.database.NAME
      kind: Secret
      name: gitea-secrets
      valuesKey: POSTGRES_DB
    - targetPath: gitea.config.database.HOST
      kind: Secret
      name: gitea-secrets
      valuesKey: POSTGRES_HOST

  postRenderers:
    - kustomize:
        patchesStrategicMerge:
          - kind: StatefulSet
            apiVersion: apps/v1
            metadata:
              name: gitea
            spec:
              template:
                spec:
                  initContainers:
                    - name: init-db
                      image: ghcr.io/lltr/postgres-initdb:15.2
                      envFrom:
                        - secretRef:
                            name: gitea-secrets
