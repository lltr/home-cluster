---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaNodePool
metadata:
  name: kafka
  namespace: development
  labels:
    strimzi.io/cluster: kafka-at-home
spec:
  replicas: 3
  roles:
    - broker
    - controller
  storage:
    type: persistent-claim
    class: local-path
    size: 10Gi
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka-at-home
  namespace: development
  annotations:
    strimzi.io/node-pools: enabled
    strimzi.io/kraft: enabled
spec:
  kafka:
    version: 3.8.0
    metadataVersion: 3.8-IV0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
      - name: external
        port: 9094
        type: ingress
        tls: true
        configuration:
          class: nginx
          bootstrap:
            host: kafka-bootstrap.${SECRET_DOMAIN}
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-production
              external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
              external-dns.home.arpa/enabled: "true"
          brokers:
            - broker: 0
              host: kafka-0.${SECRET_DOMAIN}
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt-production
                external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
                external-dns.home.arpa/enabled: "true"
            - broker: 1
              host: kafka-1.${SECRET_DOMAIN}
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt-production
                external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
                external-dns.home.arpa/enabled: "true"
            - broker: 2
              host: kafka-2.${SECRET_DOMAIN}
              annotations:
                cert-manager.io/cluster-issuer: letsencrypt-production
                external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
                external-dns.home.arpa/enabled: "true"
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
    storage:
      type: persistent-claim
      class: local-path
      size: 10Gi
    template:
      pod:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                        - kafka-at-home-kafka
                topologyKey: kubernetes.io/hostname
  zookeeper:
    replicas: 3
    storage:
      type: ephemeral
  entityOperator:
    topicOperator: {}
    userOperator: {}
